@ Project builder
build {
	@ Build the current project.
	opt -r @ Compile optimized release build
	$ cargo build --color=always $@
}
release {
	@ Build a release version and then pack it
	$ cargo build -r --color=always && doit pack
}
clean {
	@ Clean Project
	$ cargo clean
}
test {
	@ Test project
	$ cargo test --color=always $@
}
lint {
	@ Test project
	$ cargo clippy --all-targets --all-features -- -D warnings $@
}
commit {
	@ Run all required steps before comitting
	$ doit test
	$ doit lint
	$ git commit
}
pack {
	@ Pack the binaries into a zip and tarball
	$$$
	VER=`./target/release/doit --version | tr '.' '_'`
	ZIP="pack/doit_$$VER.elf64.zip"
	TAR="pack/doit_$$VER.elf64.tar.gz"

	if [ ! -e "./target/release/doit" ] ; then
		echo "Please run: \e[93mcargo build -r\e[0m"
		exit 1
	fi
	if [ ! -$$(which zip) ] ; then
		echo "Please install Zip: \e[93mapt install zip\e[0m"
		exit 1
	fi
	echo Packing './target/release'
	if [ -e ./target/pack ]; then
		rm -R ./target/pack
	fi
	mkdir ./target/pack
	cd ./target/release
	echo "Zip: \e[93m./target/$$ZIP\e[0m"
	zip "../$$ZIP" doit > /dev/null
	echo "Tar: \e[93m./target/$$TAR\e[0m"
	tar -zcf "../$$TAR" doit > /dev/null
	cd - > /dev/null
	$$$
}
# compile_test: cd test-files && doit -f --keep $@
